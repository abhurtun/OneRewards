//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace OneRewardsPhoneApp.OneRewardsService {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://onerewardswcf.azurewebsites.net/")]
    public partial class RewardAccount : EntityObject {
        
        private long rewardAccountIDField;
        
        private int companyIDField;
        
        private string userNameField;
        
        private System.Nullable<decimal> pointsField;
        
        private System.Nullable<decimal> totalPointsField;
        
        private EntityReferenceOfCompany companyReferenceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long RewardAccountID {
            get {
                return this.rewardAccountIDField;
            }
            set {
                this.rewardAccountIDField = value;
                this.RaisePropertyChanged("RewardAccountID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
                this.RaisePropertyChanged("CompanyID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<decimal> Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
                this.RaisePropertyChanged("Points");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<decimal> TotalPoints {
            get {
                return this.totalPointsField;
            }
            set {
                this.totalPointsField = value;
                this.RaisePropertyChanged("TotalPoints");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public EntityReferenceOfCompany CompanyReference {
            get {
                return this.companyReferenceField;
            }
            set {
                this.companyReferenceField = value;
                this.RaisePropertyChanged("CompanyReference");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://onerewardswcf.azurewebsites.net/")]
    public partial class EntityReferenceOfCompany : EntityReference {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfCompany))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://onerewardswcf.azurewebsites.net/")]
    public abstract partial class EntityReference : RelatedEnd {
        
        private EntityKey entityKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public EntityKey EntityKey {
            get {
                return this.entityKeyField;
            }
            set {
                this.entityKeyField = value;
                this.RaisePropertyChanged("EntityKey");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://onerewardswcf.azurewebsites.net/")]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string entitySetNameField;
        
        private string entityContainerNameField;
        
        private EntityKeyMember[] entityKeyValuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EntitySetName {
            get {
                return this.entitySetNameField;
            }
            set {
                this.entitySetNameField = value;
                this.RaisePropertyChanged("EntitySetName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string EntityContainerName {
            get {
                return this.entityContainerNameField;
            }
            set {
                this.entityContainerNameField = value;
                this.RaisePropertyChanged("EntityContainerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public EntityKeyMember[] EntityKeyValues {
            get {
                return this.entityKeyValuesField;
            }
            set {
                this.entityKeyValuesField = value;
                this.RaisePropertyChanged("EntityKeyValues");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://onerewardswcf.azurewebsites.net/")]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfCompany))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://onerewardswcf.azurewebsites.net/")]
    public abstract partial class RelatedEnd : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Company))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RewardAccount))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://onerewardswcf.azurewebsites.net/")]
    public abstract partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Company))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RewardAccount))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://onerewardswcf.azurewebsites.net/")]
    public abstract partial class EntityObject : StructuralObject {
        
        private EntityKey entityKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public EntityKey EntityKey {
            get {
                return this.entityKeyField;
            }
            set {
                this.entityKeyField = value;
                this.RaisePropertyChanged("EntityKey");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://onerewardswcf.azurewebsites.net/")]
    public partial class Company : EntityObject {
        
        private int companyIDField;
        
        private string companyNameField;
        
        private byte[] companyLogoField;
        
        private string companyRewardsLinkField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
                this.RaisePropertyChanged("CompanyID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
                this.RaisePropertyChanged("CompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=2)]
        public byte[] CompanyLogo {
            get {
                return this.companyLogoField;
            }
            set {
                this.companyLogoField = value;
                this.RaisePropertyChanged("CompanyLogo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CompanyRewardsLink {
            get {
                return this.companyRewardsLinkField;
            }
            set {
                this.companyRewardsLinkField = value;
                this.RaisePropertyChanged("CompanyRewardsLink");
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://onerewardswcf.azurewebsites.net/", ConfigurationName="OneRewardsService.IOneRewardsService")]
    public interface IOneRewardsService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/autenticate", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/autenticateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult Beginautenticate(string Email, System.AsyncCallback callback, object asyncState);
        
        bool Endautenticate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getAllRewardsAccount", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getAllRewardsAccountRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OneRewardsPhoneApp.OneRewardsService.RewardAccount), Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getAllRewardsAccountRew" +
            "ardAccountFault", Name="RewardAccount")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BegingetAllRewardsAccount(string email, System.AsyncCallback callback, object asyncState);
        
        RewardAccount[] EndgetAllRewardsAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanys", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanysResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OneRewardsPhoneApp.OneRewardsService.Company), Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanysCompanyFault" +
            "", Name="Company")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BegingetCompanys(System.AsyncCallback callback, object asyncState);
        
        Company[] EndgetCompanys(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getRewardsAccount", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getRewardsAccountRespon" +
            "se")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BegingetRewardsAccount(long accid, int cid, System.AsyncCallback callback, object asyncState);
        
        OneRewardsPhoneApp.OneRewardsService.RewardAccount EndgetRewardsAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanyID", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanyIDResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BegingetCompanyID(string cname, System.AsyncCallback callback, object asyncState);
        
        int EndgetCompanyID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanyNames", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanyNamesResponse" +
            "")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BegingetCompanyNames(System.AsyncCallback callback, object asyncState);
        
        string[] EndgetCompanyNames(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/addRewardsAccount", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/addRewardsAccountRespon" +
            "se")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BeginaddRewardsAccount(long accid, int cid, string email, System.AsyncCallback callback, object asyncState);
        
        bool EndaddRewardsAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getTPoints", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getTPointsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BegingetTPoints(long accid, int cid, System.AsyncCallback callback, object asyncState);
        
        double EndgetTPoints(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getAPoints", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getAPointsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BegingetAPoints(long accid, int cid, System.AsyncCallback callback, object asyncState);
        
        double EndgetAPoints(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/updatePoints", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/updatePointsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BeginupdatePoints(long accid, int cid, double points, System.AsyncCallback callback, object asyncState);
        
        bool EndupdatePoints(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/removeRewardsAccount", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/removeRewardsAccountRes" +
            "ponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BeginremoveRewardsAccount(long accid, int cid, System.AsyncCallback callback, object asyncState);
        
        bool EndremoveRewardsAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanyLogo", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanyLogoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BegingetCompanyLogo(OneRewardsPhoneApp.OneRewardsService.getCompanyLogoRequest request, System.AsyncCallback callback, object asyncState);
        
        OneRewardsPhoneApp.OneRewardsService.getCompanyLogoResponse EndgetCompanyLogo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanyLogoID", ReplyAction="http://onerewardswcf.azurewebsites.net/IOneRewardsService/getCompanyLogoIDRespons" +
            "e")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RewardAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntityKeyMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Company[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        System.IAsyncResult BegingetCompanyLogoID(OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDRequest request, System.AsyncCallback callback, object asyncState);
        
        OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDResponse EndgetCompanyLogoID(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCompanyLogo", WrapperNamespace="http://onerewardswcf.azurewebsites.net/", IsWrapped=true)]
    public partial class getCompanyLogoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://onerewardswcf.azurewebsites.net/", Order=0)]
        public string name;
        
        public getCompanyLogoRequest() {
        }
        
        public getCompanyLogoRequest(string name) {
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCompanyLogoResponse", WrapperNamespace="http://onerewardswcf.azurewebsites.net/", IsWrapped=true)]
    public partial class getCompanyLogoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://onerewardswcf.azurewebsites.net/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getCompanyLogoResult;
        
        public getCompanyLogoResponse() {
        }
        
        public getCompanyLogoResponse(byte[] getCompanyLogoResult) {
            this.getCompanyLogoResult = getCompanyLogoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCompanyLogoID", WrapperNamespace="http://onerewardswcf.azurewebsites.net/", IsWrapped=true)]
    public partial class getCompanyLogoIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://onerewardswcf.azurewebsites.net/", Order=0)]
        public int cid;
        
        public getCompanyLogoIDRequest() {
        }
        
        public getCompanyLogoIDRequest(int cid) {
            this.cid = cid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCompanyLogoIDResponse", WrapperNamespace="http://onerewardswcf.azurewebsites.net/", IsWrapped=true)]
    public partial class getCompanyLogoIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://onerewardswcf.azurewebsites.net/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getCompanyLogoIDResult;
        
        public getCompanyLogoIDResponse() {
        }
        
        public getCompanyLogoIDResponse(byte[] getCompanyLogoIDResult) {
            this.getCompanyLogoIDResult = getCompanyLogoIDResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOneRewardsServiceChannel : OneRewardsPhoneApp.OneRewardsService.IOneRewardsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class autenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public autenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAllRewardsAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAllRewardsAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RewardAccount[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RewardAccount[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getCompanysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getCompanysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Company[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRewardsAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRewardsAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OneRewardsPhoneApp.OneRewardsService.RewardAccount Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OneRewardsPhoneApp.OneRewardsService.RewardAccount)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getCompanyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getCompanyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getCompanyNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getCompanyNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addRewardsAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addRewardsAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getTPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getTPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getAPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getAPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updatePointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updatePointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class removeRewardsAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public removeRewardsAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getCompanyLogoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getCompanyLogoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getCompanyLogoIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getCompanyLogoIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OneRewardsServiceClient : System.ServiceModel.ClientBase<OneRewardsPhoneApp.OneRewardsService.IOneRewardsService>, OneRewardsPhoneApp.OneRewardsService.IOneRewardsService {
        
        private BeginOperationDelegate onBeginautenticateDelegate;
        
        private EndOperationDelegate onEndautenticateDelegate;
        
        private System.Threading.SendOrPostCallback onautenticateCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAllRewardsAccountDelegate;
        
        private EndOperationDelegate onEndgetAllRewardsAccountDelegate;
        
        private System.Threading.SendOrPostCallback ongetAllRewardsAccountCompletedDelegate;
        
        private BeginOperationDelegate onBegingetCompanysDelegate;
        
        private EndOperationDelegate onEndgetCompanysDelegate;
        
        private System.Threading.SendOrPostCallback ongetCompanysCompletedDelegate;
        
        private BeginOperationDelegate onBegingetRewardsAccountDelegate;
        
        private EndOperationDelegate onEndgetRewardsAccountDelegate;
        
        private System.Threading.SendOrPostCallback ongetRewardsAccountCompletedDelegate;
        
        private BeginOperationDelegate onBegingetCompanyIDDelegate;
        
        private EndOperationDelegate onEndgetCompanyIDDelegate;
        
        private System.Threading.SendOrPostCallback ongetCompanyIDCompletedDelegate;
        
        private BeginOperationDelegate onBegingetCompanyNamesDelegate;
        
        private EndOperationDelegate onEndgetCompanyNamesDelegate;
        
        private System.Threading.SendOrPostCallback ongetCompanyNamesCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddRewardsAccountDelegate;
        
        private EndOperationDelegate onEndaddRewardsAccountDelegate;
        
        private System.Threading.SendOrPostCallback onaddRewardsAccountCompletedDelegate;
        
        private BeginOperationDelegate onBegingetTPointsDelegate;
        
        private EndOperationDelegate onEndgetTPointsDelegate;
        
        private System.Threading.SendOrPostCallback ongetTPointsCompletedDelegate;
        
        private BeginOperationDelegate onBegingetAPointsDelegate;
        
        private EndOperationDelegate onEndgetAPointsDelegate;
        
        private System.Threading.SendOrPostCallback ongetAPointsCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdatePointsDelegate;
        
        private EndOperationDelegate onEndupdatePointsDelegate;
        
        private System.Threading.SendOrPostCallback onupdatePointsCompletedDelegate;
        
        private BeginOperationDelegate onBeginremoveRewardsAccountDelegate;
        
        private EndOperationDelegate onEndremoveRewardsAccountDelegate;
        
        private System.Threading.SendOrPostCallback onremoveRewardsAccountCompletedDelegate;
        
        private BeginOperationDelegate onBegingetCompanyLogoDelegate;
        
        private EndOperationDelegate onEndgetCompanyLogoDelegate;
        
        private System.Threading.SendOrPostCallback ongetCompanyLogoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetCompanyLogoIDDelegate;
        
        private EndOperationDelegate onEndgetCompanyLogoIDDelegate;
        
        private System.Threading.SendOrPostCallback ongetCompanyLogoIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public OneRewardsServiceClient() {
        }
        
        public OneRewardsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OneRewardsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OneRewardsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OneRewardsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<autenticateCompletedEventArgs> autenticateCompleted;
        
        public event System.EventHandler<getAllRewardsAccountCompletedEventArgs> getAllRewardsAccountCompleted;
        
        public event System.EventHandler<getCompanysCompletedEventArgs> getCompanysCompleted;
        
        public event System.EventHandler<getRewardsAccountCompletedEventArgs> getRewardsAccountCompleted;
        
        public event System.EventHandler<getCompanyIDCompletedEventArgs> getCompanyIDCompleted;
        
        public event System.EventHandler<getCompanyNamesCompletedEventArgs> getCompanyNamesCompleted;
        
        public event System.EventHandler<addRewardsAccountCompletedEventArgs> addRewardsAccountCompleted;
        
        public event System.EventHandler<getTPointsCompletedEventArgs> getTPointsCompleted;
        
        public event System.EventHandler<getAPointsCompletedEventArgs> getAPointsCompleted;
        
        public event System.EventHandler<updatePointsCompletedEventArgs> updatePointsCompleted;
        
        public event System.EventHandler<removeRewardsAccountCompletedEventArgs> removeRewardsAccountCompleted;
        
        public event System.EventHandler<getCompanyLogoCompletedEventArgs> getCompanyLogoCompleted;
        
        public event System.EventHandler<getCompanyLogoIDCompletedEventArgs> getCompanyLogoIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.Beginautenticate(string Email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginautenticate(Email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.Endautenticate(System.IAsyncResult result) {
            return base.Channel.Endautenticate(result);
        }
        
        private System.IAsyncResult OnBeginautenticate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Email = ((string)(inValues[0]));
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).Beginautenticate(Email, callback, asyncState);
        }
        
        private object[] OnEndautenticate(System.IAsyncResult result) {
            bool retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).Endautenticate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnautenticateCompleted(object state) {
            if ((this.autenticateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.autenticateCompleted(this, new autenticateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void autenticateAsync(string Email) {
            this.autenticateAsync(Email, null);
        }
        
        public void autenticateAsync(string Email, object userState) {
            if ((this.onBeginautenticateDelegate == null)) {
                this.onBeginautenticateDelegate = new BeginOperationDelegate(this.OnBeginautenticate);
            }
            if ((this.onEndautenticateDelegate == null)) {
                this.onEndautenticateDelegate = new EndOperationDelegate(this.OnEndautenticate);
            }
            if ((this.onautenticateCompletedDelegate == null)) {
                this.onautenticateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnautenticateCompleted);
            }
            base.InvokeAsync(this.onBeginautenticateDelegate, new object[] {
                        Email}, this.onEndautenticateDelegate, this.onautenticateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BegingetAllRewardsAccount(string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAllRewardsAccount(email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RewardAccount[] OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndgetAllRewardsAccount(System.IAsyncResult result) {
            return base.Channel.EndgetAllRewardsAccount(result);
        }
        
        private System.IAsyncResult OnBegingetAllRewardsAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BegingetAllRewardsAccount(email, callback, asyncState);
        }
        
        private object[] OnEndgetAllRewardsAccount(System.IAsyncResult result) {
            RewardAccount[] retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndgetAllRewardsAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAllRewardsAccountCompleted(object state) {
            if ((this.getAllRewardsAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAllRewardsAccountCompleted(this, new getAllRewardsAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAllRewardsAccountAsync(string email) {
            this.getAllRewardsAccountAsync(email, null);
        }
        
        public void getAllRewardsAccountAsync(string email, object userState) {
            if ((this.onBegingetAllRewardsAccountDelegate == null)) {
                this.onBegingetAllRewardsAccountDelegate = new BeginOperationDelegate(this.OnBegingetAllRewardsAccount);
            }
            if ((this.onEndgetAllRewardsAccountDelegate == null)) {
                this.onEndgetAllRewardsAccountDelegate = new EndOperationDelegate(this.OnEndgetAllRewardsAccount);
            }
            if ((this.ongetAllRewardsAccountCompletedDelegate == null)) {
                this.ongetAllRewardsAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllRewardsAccountCompleted);
            }
            base.InvokeAsync(this.onBegingetAllRewardsAccountDelegate, new object[] {
                        email}, this.onEndgetAllRewardsAccountDelegate, this.ongetAllRewardsAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BegingetCompanys(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetCompanys(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Company[] OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndgetCompanys(System.IAsyncResult result) {
            return base.Channel.EndgetCompanys(result);
        }
        
        private System.IAsyncResult OnBegingetCompanys(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BegingetCompanys(callback, asyncState);
        }
        
        private object[] OnEndgetCompanys(System.IAsyncResult result) {
            Company[] retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndgetCompanys(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetCompanysCompleted(object state) {
            if ((this.getCompanysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getCompanysCompleted(this, new getCompanysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getCompanysAsync() {
            this.getCompanysAsync(null);
        }
        
        public void getCompanysAsync(object userState) {
            if ((this.onBegingetCompanysDelegate == null)) {
                this.onBegingetCompanysDelegate = new BeginOperationDelegate(this.OnBegingetCompanys);
            }
            if ((this.onEndgetCompanysDelegate == null)) {
                this.onEndgetCompanysDelegate = new EndOperationDelegate(this.OnEndgetCompanys);
            }
            if ((this.ongetCompanysCompletedDelegate == null)) {
                this.ongetCompanysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetCompanysCompleted);
            }
            base.InvokeAsync(this.onBegingetCompanysDelegate, null, this.onEndgetCompanysDelegate, this.ongetCompanysCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BegingetRewardsAccount(long accid, int cid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRewardsAccount(accid, cid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OneRewardsPhoneApp.OneRewardsService.RewardAccount OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndgetRewardsAccount(System.IAsyncResult result) {
            return base.Channel.EndgetRewardsAccount(result);
        }
        
        private System.IAsyncResult OnBegingetRewardsAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long accid = ((long)(inValues[0]));
            int cid = ((int)(inValues[1]));
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BegingetRewardsAccount(accid, cid, callback, asyncState);
        }
        
        private object[] OnEndgetRewardsAccount(System.IAsyncResult result) {
            OneRewardsPhoneApp.OneRewardsService.RewardAccount retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndgetRewardsAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRewardsAccountCompleted(object state) {
            if ((this.getRewardsAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRewardsAccountCompleted(this, new getRewardsAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRewardsAccountAsync(long accid, int cid) {
            this.getRewardsAccountAsync(accid, cid, null);
        }
        
        public void getRewardsAccountAsync(long accid, int cid, object userState) {
            if ((this.onBegingetRewardsAccountDelegate == null)) {
                this.onBegingetRewardsAccountDelegate = new BeginOperationDelegate(this.OnBegingetRewardsAccount);
            }
            if ((this.onEndgetRewardsAccountDelegate == null)) {
                this.onEndgetRewardsAccountDelegate = new EndOperationDelegate(this.OnEndgetRewardsAccount);
            }
            if ((this.ongetRewardsAccountCompletedDelegate == null)) {
                this.ongetRewardsAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRewardsAccountCompleted);
            }
            base.InvokeAsync(this.onBegingetRewardsAccountDelegate, new object[] {
                        accid,
                        cid}, this.onEndgetRewardsAccountDelegate, this.ongetRewardsAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BegingetCompanyID(string cname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetCompanyID(cname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndgetCompanyID(System.IAsyncResult result) {
            return base.Channel.EndgetCompanyID(result);
        }
        
        private System.IAsyncResult OnBegingetCompanyID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cname = ((string)(inValues[0]));
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BegingetCompanyID(cname, callback, asyncState);
        }
        
        private object[] OnEndgetCompanyID(System.IAsyncResult result) {
            int retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndgetCompanyID(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetCompanyIDCompleted(object state) {
            if ((this.getCompanyIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getCompanyIDCompleted(this, new getCompanyIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getCompanyIDAsync(string cname) {
            this.getCompanyIDAsync(cname, null);
        }
        
        public void getCompanyIDAsync(string cname, object userState) {
            if ((this.onBegingetCompanyIDDelegate == null)) {
                this.onBegingetCompanyIDDelegate = new BeginOperationDelegate(this.OnBegingetCompanyID);
            }
            if ((this.onEndgetCompanyIDDelegate == null)) {
                this.onEndgetCompanyIDDelegate = new EndOperationDelegate(this.OnEndgetCompanyID);
            }
            if ((this.ongetCompanyIDCompletedDelegate == null)) {
                this.ongetCompanyIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetCompanyIDCompleted);
            }
            base.InvokeAsync(this.onBegingetCompanyIDDelegate, new object[] {
                        cname}, this.onEndgetCompanyIDDelegate, this.ongetCompanyIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BegingetCompanyNames(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetCompanyNames(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndgetCompanyNames(System.IAsyncResult result) {
            return base.Channel.EndgetCompanyNames(result);
        }
        
        private System.IAsyncResult OnBegingetCompanyNames(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BegingetCompanyNames(callback, asyncState);
        }
        
        private object[] OnEndgetCompanyNames(System.IAsyncResult result) {
            string[] retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndgetCompanyNames(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetCompanyNamesCompleted(object state) {
            if ((this.getCompanyNamesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getCompanyNamesCompleted(this, new getCompanyNamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getCompanyNamesAsync() {
            this.getCompanyNamesAsync(null);
        }
        
        public void getCompanyNamesAsync(object userState) {
            if ((this.onBegingetCompanyNamesDelegate == null)) {
                this.onBegingetCompanyNamesDelegate = new BeginOperationDelegate(this.OnBegingetCompanyNames);
            }
            if ((this.onEndgetCompanyNamesDelegate == null)) {
                this.onEndgetCompanyNamesDelegate = new EndOperationDelegate(this.OnEndgetCompanyNames);
            }
            if ((this.ongetCompanyNamesCompletedDelegate == null)) {
                this.ongetCompanyNamesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetCompanyNamesCompleted);
            }
            base.InvokeAsync(this.onBegingetCompanyNamesDelegate, null, this.onEndgetCompanyNamesDelegate, this.ongetCompanyNamesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BeginaddRewardsAccount(long accid, int cid, string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddRewardsAccount(accid, cid, email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndaddRewardsAccount(System.IAsyncResult result) {
            return base.Channel.EndaddRewardsAccount(result);
        }
        
        private System.IAsyncResult OnBeginaddRewardsAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long accid = ((long)(inValues[0]));
            int cid = ((int)(inValues[1]));
            string email = ((string)(inValues[2]));
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BeginaddRewardsAccount(accid, cid, email, callback, asyncState);
        }
        
        private object[] OnEndaddRewardsAccount(System.IAsyncResult result) {
            bool retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndaddRewardsAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddRewardsAccountCompleted(object state) {
            if ((this.addRewardsAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addRewardsAccountCompleted(this, new addRewardsAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addRewardsAccountAsync(long accid, int cid, string email) {
            this.addRewardsAccountAsync(accid, cid, email, null);
        }
        
        public void addRewardsAccountAsync(long accid, int cid, string email, object userState) {
            if ((this.onBeginaddRewardsAccountDelegate == null)) {
                this.onBeginaddRewardsAccountDelegate = new BeginOperationDelegate(this.OnBeginaddRewardsAccount);
            }
            if ((this.onEndaddRewardsAccountDelegate == null)) {
                this.onEndaddRewardsAccountDelegate = new EndOperationDelegate(this.OnEndaddRewardsAccount);
            }
            if ((this.onaddRewardsAccountCompletedDelegate == null)) {
                this.onaddRewardsAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddRewardsAccountCompleted);
            }
            base.InvokeAsync(this.onBeginaddRewardsAccountDelegate, new object[] {
                        accid,
                        cid,
                        email}, this.onEndaddRewardsAccountDelegate, this.onaddRewardsAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BegingetTPoints(long accid, int cid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetTPoints(accid, cid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndgetTPoints(System.IAsyncResult result) {
            return base.Channel.EndgetTPoints(result);
        }
        
        private System.IAsyncResult OnBegingetTPoints(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long accid = ((long)(inValues[0]));
            int cid = ((int)(inValues[1]));
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BegingetTPoints(accid, cid, callback, asyncState);
        }
        
        private object[] OnEndgetTPoints(System.IAsyncResult result) {
            double retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndgetTPoints(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetTPointsCompleted(object state) {
            if ((this.getTPointsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getTPointsCompleted(this, new getTPointsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getTPointsAsync(long accid, int cid) {
            this.getTPointsAsync(accid, cid, null);
        }
        
        public void getTPointsAsync(long accid, int cid, object userState) {
            if ((this.onBegingetTPointsDelegate == null)) {
                this.onBegingetTPointsDelegate = new BeginOperationDelegate(this.OnBegingetTPoints);
            }
            if ((this.onEndgetTPointsDelegate == null)) {
                this.onEndgetTPointsDelegate = new EndOperationDelegate(this.OnEndgetTPoints);
            }
            if ((this.ongetTPointsCompletedDelegate == null)) {
                this.ongetTPointsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetTPointsCompleted);
            }
            base.InvokeAsync(this.onBegingetTPointsDelegate, new object[] {
                        accid,
                        cid}, this.onEndgetTPointsDelegate, this.ongetTPointsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BegingetAPoints(long accid, int cid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetAPoints(accid, cid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndgetAPoints(System.IAsyncResult result) {
            return base.Channel.EndgetAPoints(result);
        }
        
        private System.IAsyncResult OnBegingetAPoints(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long accid = ((long)(inValues[0]));
            int cid = ((int)(inValues[1]));
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BegingetAPoints(accid, cid, callback, asyncState);
        }
        
        private object[] OnEndgetAPoints(System.IAsyncResult result) {
            double retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndgetAPoints(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetAPointsCompleted(object state) {
            if ((this.getAPointsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getAPointsCompleted(this, new getAPointsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getAPointsAsync(long accid, int cid) {
            this.getAPointsAsync(accid, cid, null);
        }
        
        public void getAPointsAsync(long accid, int cid, object userState) {
            if ((this.onBegingetAPointsDelegate == null)) {
                this.onBegingetAPointsDelegate = new BeginOperationDelegate(this.OnBegingetAPoints);
            }
            if ((this.onEndgetAPointsDelegate == null)) {
                this.onEndgetAPointsDelegate = new EndOperationDelegate(this.OnEndgetAPoints);
            }
            if ((this.ongetAPointsCompletedDelegate == null)) {
                this.ongetAPointsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAPointsCompleted);
            }
            base.InvokeAsync(this.onBegingetAPointsDelegate, new object[] {
                        accid,
                        cid}, this.onEndgetAPointsDelegate, this.ongetAPointsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BeginupdatePoints(long accid, int cid, double points, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdatePoints(accid, cid, points, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndupdatePoints(System.IAsyncResult result) {
            return base.Channel.EndupdatePoints(result);
        }
        
        private System.IAsyncResult OnBeginupdatePoints(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long accid = ((long)(inValues[0]));
            int cid = ((int)(inValues[1]));
            double points = ((double)(inValues[2]));
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BeginupdatePoints(accid, cid, points, callback, asyncState);
        }
        
        private object[] OnEndupdatePoints(System.IAsyncResult result) {
            bool retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndupdatePoints(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdatePointsCompleted(object state) {
            if ((this.updatePointsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updatePointsCompleted(this, new updatePointsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updatePointsAsync(long accid, int cid, double points) {
            this.updatePointsAsync(accid, cid, points, null);
        }
        
        public void updatePointsAsync(long accid, int cid, double points, object userState) {
            if ((this.onBeginupdatePointsDelegate == null)) {
                this.onBeginupdatePointsDelegate = new BeginOperationDelegate(this.OnBeginupdatePoints);
            }
            if ((this.onEndupdatePointsDelegate == null)) {
                this.onEndupdatePointsDelegate = new EndOperationDelegate(this.OnEndupdatePoints);
            }
            if ((this.onupdatePointsCompletedDelegate == null)) {
                this.onupdatePointsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdatePointsCompleted);
            }
            base.InvokeAsync(this.onBeginupdatePointsDelegate, new object[] {
                        accid,
                        cid,
                        points}, this.onEndupdatePointsDelegate, this.onupdatePointsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BeginremoveRewardsAccount(long accid, int cid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginremoveRewardsAccount(accid, cid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndremoveRewardsAccount(System.IAsyncResult result) {
            return base.Channel.EndremoveRewardsAccount(result);
        }
        
        private System.IAsyncResult OnBeginremoveRewardsAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long accid = ((long)(inValues[0]));
            int cid = ((int)(inValues[1]));
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BeginremoveRewardsAccount(accid, cid, callback, asyncState);
        }
        
        private object[] OnEndremoveRewardsAccount(System.IAsyncResult result) {
            bool retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndremoveRewardsAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnremoveRewardsAccountCompleted(object state) {
            if ((this.removeRewardsAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.removeRewardsAccountCompleted(this, new removeRewardsAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void removeRewardsAccountAsync(long accid, int cid) {
            this.removeRewardsAccountAsync(accid, cid, null);
        }
        
        public void removeRewardsAccountAsync(long accid, int cid, object userState) {
            if ((this.onBeginremoveRewardsAccountDelegate == null)) {
                this.onBeginremoveRewardsAccountDelegate = new BeginOperationDelegate(this.OnBeginremoveRewardsAccount);
            }
            if ((this.onEndremoveRewardsAccountDelegate == null)) {
                this.onEndremoveRewardsAccountDelegate = new EndOperationDelegate(this.OnEndremoveRewardsAccount);
            }
            if ((this.onremoveRewardsAccountCompletedDelegate == null)) {
                this.onremoveRewardsAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnremoveRewardsAccountCompleted);
            }
            base.InvokeAsync(this.onBeginremoveRewardsAccountDelegate, new object[] {
                        accid,
                        cid}, this.onEndremoveRewardsAccountDelegate, this.onremoveRewardsAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BegingetCompanyLogo(OneRewardsPhoneApp.OneRewardsService.getCompanyLogoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetCompanyLogo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetCompanyLogo(string name, System.AsyncCallback callback, object asyncState) {
            OneRewardsPhoneApp.OneRewardsService.getCompanyLogoRequest inValue = new OneRewardsPhoneApp.OneRewardsService.getCompanyLogoRequest();
            inValue.name = name;
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BegingetCompanyLogo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OneRewardsPhoneApp.OneRewardsService.getCompanyLogoResponse OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndgetCompanyLogo(System.IAsyncResult result) {
            return base.Channel.EndgetCompanyLogo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private byte[] EndgetCompanyLogo(System.IAsyncResult result) {
            OneRewardsPhoneApp.OneRewardsService.getCompanyLogoResponse retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndgetCompanyLogo(result);
            return retVal.getCompanyLogoResult;
        }
        
        private System.IAsyncResult OnBegingetCompanyLogo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return this.BegingetCompanyLogo(name, callback, asyncState);
        }
        
        private object[] OnEndgetCompanyLogo(System.IAsyncResult result) {
            byte[] retVal = this.EndgetCompanyLogo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetCompanyLogoCompleted(object state) {
            if ((this.getCompanyLogoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getCompanyLogoCompleted(this, new getCompanyLogoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getCompanyLogoAsync(string name) {
            this.getCompanyLogoAsync(name, null);
        }
        
        public void getCompanyLogoAsync(string name, object userState) {
            if ((this.onBegingetCompanyLogoDelegate == null)) {
                this.onBegingetCompanyLogoDelegate = new BeginOperationDelegate(this.OnBegingetCompanyLogo);
            }
            if ((this.onEndgetCompanyLogoDelegate == null)) {
                this.onEndgetCompanyLogoDelegate = new EndOperationDelegate(this.OnEndgetCompanyLogo);
            }
            if ((this.ongetCompanyLogoCompletedDelegate == null)) {
                this.ongetCompanyLogoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetCompanyLogoCompleted);
            }
            base.InvokeAsync(this.onBegingetCompanyLogoDelegate, new object[] {
                        name}, this.onEndgetCompanyLogoDelegate, this.ongetCompanyLogoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.BegingetCompanyLogoID(OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetCompanyLogoID(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetCompanyLogoID(int cid, System.AsyncCallback callback, object asyncState) {
            OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDRequest inValue = new OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDRequest();
            inValue.cid = cid;
            return ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).BegingetCompanyLogoID(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDResponse OneRewardsPhoneApp.OneRewardsService.IOneRewardsService.EndgetCompanyLogoID(System.IAsyncResult result) {
            return base.Channel.EndgetCompanyLogoID(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private byte[] EndgetCompanyLogoID(System.IAsyncResult result) {
            OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDResponse retVal = ((OneRewardsPhoneApp.OneRewardsService.IOneRewardsService)(this)).EndgetCompanyLogoID(result);
            return retVal.getCompanyLogoIDResult;
        }
        
        private System.IAsyncResult OnBegingetCompanyLogoID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cid = ((int)(inValues[0]));
            return this.BegingetCompanyLogoID(cid, callback, asyncState);
        }
        
        private object[] OnEndgetCompanyLogoID(System.IAsyncResult result) {
            byte[] retVal = this.EndgetCompanyLogoID(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetCompanyLogoIDCompleted(object state) {
            if ((this.getCompanyLogoIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getCompanyLogoIDCompleted(this, new getCompanyLogoIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getCompanyLogoIDAsync(int cid) {
            this.getCompanyLogoIDAsync(cid, null);
        }
        
        public void getCompanyLogoIDAsync(int cid, object userState) {
            if ((this.onBegingetCompanyLogoIDDelegate == null)) {
                this.onBegingetCompanyLogoIDDelegate = new BeginOperationDelegate(this.OnBegingetCompanyLogoID);
            }
            if ((this.onEndgetCompanyLogoIDDelegate == null)) {
                this.onEndgetCompanyLogoIDDelegate = new EndOperationDelegate(this.OnEndgetCompanyLogoID);
            }
            if ((this.ongetCompanyLogoIDCompletedDelegate == null)) {
                this.ongetCompanyLogoIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetCompanyLogoIDCompleted);
            }
            base.InvokeAsync(this.onBegingetCompanyLogoIDDelegate, new object[] {
                        cid}, this.onEndgetCompanyLogoIDDelegate, this.ongetCompanyLogoIDCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override OneRewardsPhoneApp.OneRewardsService.IOneRewardsService CreateChannel() {
            return new OneRewardsServiceClientChannel(this);
        }
        
        private class OneRewardsServiceClientChannel : ChannelBase<OneRewardsPhoneApp.OneRewardsService.IOneRewardsService>, OneRewardsPhoneApp.OneRewardsService.IOneRewardsService {
            
            public OneRewardsServiceClientChannel(System.ServiceModel.ClientBase<OneRewardsPhoneApp.OneRewardsService.IOneRewardsService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult Beginautenticate(string Email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Email;
                System.IAsyncResult _result = base.BeginInvoke("autenticate", _args, callback, asyncState);
                return _result;
            }
            
            public bool Endautenticate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("autenticate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAllRewardsAccount(string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = email;
                System.IAsyncResult _result = base.BeginInvoke("getAllRewardsAccount", _args, callback, asyncState);
                return _result;
            }
            
            public RewardAccount[] EndgetAllRewardsAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                RewardAccount[] _result = ((RewardAccount[])(base.EndInvoke("getAllRewardsAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetCompanys(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getCompanys", _args, callback, asyncState);
                return _result;
            }
            
            public Company[] EndgetCompanys(System.IAsyncResult result) {
                object[] _args = new object[0];
                Company[] _result = ((Company[])(base.EndInvoke("getCompanys", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetRewardsAccount(long accid, int cid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = accid;
                _args[1] = cid;
                System.IAsyncResult _result = base.BeginInvoke("getRewardsAccount", _args, callback, asyncState);
                return _result;
            }
            
            public OneRewardsPhoneApp.OneRewardsService.RewardAccount EndgetRewardsAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                OneRewardsPhoneApp.OneRewardsService.RewardAccount _result = ((OneRewardsPhoneApp.OneRewardsService.RewardAccount)(base.EndInvoke("getRewardsAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetCompanyID(string cname, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cname;
                System.IAsyncResult _result = base.BeginInvoke("getCompanyID", _args, callback, asyncState);
                return _result;
            }
            
            public int EndgetCompanyID(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("getCompanyID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetCompanyNames(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getCompanyNames", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndgetCompanyNames(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("getCompanyNames", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginaddRewardsAccount(long accid, int cid, string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = accid;
                _args[1] = cid;
                _args[2] = email;
                System.IAsyncResult _result = base.BeginInvoke("addRewardsAccount", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndaddRewardsAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("addRewardsAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetTPoints(long accid, int cid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = accid;
                _args[1] = cid;
                System.IAsyncResult _result = base.BeginInvoke("getTPoints", _args, callback, asyncState);
                return _result;
            }
            
            public double EndgetTPoints(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("getTPoints", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetAPoints(long accid, int cid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = accid;
                _args[1] = cid;
                System.IAsyncResult _result = base.BeginInvoke("getAPoints", _args, callback, asyncState);
                return _result;
            }
            
            public double EndgetAPoints(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("getAPoints", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginupdatePoints(long accid, int cid, double points, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = accid;
                _args[1] = cid;
                _args[2] = points;
                System.IAsyncResult _result = base.BeginInvoke("updatePoints", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndupdatePoints(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("updatePoints", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginremoveRewardsAccount(long accid, int cid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = accid;
                _args[1] = cid;
                System.IAsyncResult _result = base.BeginInvoke("removeRewardsAccount", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndremoveRewardsAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("removeRewardsAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetCompanyLogo(OneRewardsPhoneApp.OneRewardsService.getCompanyLogoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getCompanyLogo", _args, callback, asyncState);
                return _result;
            }
            
            public OneRewardsPhoneApp.OneRewardsService.getCompanyLogoResponse EndgetCompanyLogo(System.IAsyncResult result) {
                object[] _args = new object[0];
                OneRewardsPhoneApp.OneRewardsService.getCompanyLogoResponse _result = ((OneRewardsPhoneApp.OneRewardsService.getCompanyLogoResponse)(base.EndInvoke("getCompanyLogo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetCompanyLogoID(OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getCompanyLogoID", _args, callback, asyncState);
                return _result;
            }
            
            public OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDResponse EndgetCompanyLogoID(System.IAsyncResult result) {
                object[] _args = new object[0];
                OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDResponse _result = ((OneRewardsPhoneApp.OneRewardsService.getCompanyLogoIDResponse)(base.EndInvoke("getCompanyLogoID", _args, result)));
                return _result;
            }
        }
    }
}
