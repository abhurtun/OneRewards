// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace OneRewardsTestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Homepage - Use 'HomepageParams' to pass parameters into this method.
        /// </summary>
        public void Homepage()
        {
            #region Variable Declarations
            WinMenuItem uIItemMenuItem = this.UIInternetExplorercannWindow.UIAddressComboControlToolBar.UIItemMenuItem;
            WinEdit uIAddressandsearchusinEdit = this.UIInternetExplorercannWindow.UIItemWindow.UIAddressandsearchusinEdit;
            #endregion

            // Go to web page 'http://skyhub/site/' using new browser instance
            this.UIInternetExplorercannWindow.LaunchUrl(new System.Uri(this.HomepageParams.UIInternetExplorercannWindowUrl));

            // Click menu item numbered 2 in 'Address Combo Control' menu item
            Mouse.Click(uIItemMenuItem, new Point(171, 18));

            // Type 'h' in 'Address and search using Bing' text box
            uIAddressandsearchusinEdit.Text = this.HomepageParams.UIAddressandsearchusinEditText;

            // Type 'ttp://onerewards.' in 'Address and search using Bing' text box
            Keyboard.SendKeys(uIAddressandsearchusinEdit, this.HomepageParams.UIAddressandsearchusinEditSendKeys, ModifierKeys.None);

            // Type 'azurewebsites.net{Enter}' in 'Address and search using Bing' text box
            Keyboard.SendKeys(uIAddressandsearchusinEdit, this.HomepageParams.UIAddressandsearchusinEditSendKeys1, ModifierKeys.None);
        }
        
        /// <summary>
        /// LoginAssert - Use 'LoginAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void LoginAssert()
        {
            #region Variable Declarations
            HtmlHyperlink uIRegisterHyperlink = this.UIInternetExplorercannWindow.UIOneRewardsOneRewardsDocument.UIRegisterHyperlink;
            HtmlHyperlink uILoginHyperlink = this.UIInternetExplorercannWindow.UIOneRewardsOneRewardsDocument.UILoginHyperlink;
            HtmlCustom uIItemCustom = this.UIInternetExplorercannWindow.UILoginOneRewardsDocument.UIBodyPane.UIItemCustom;
            #endregion

            // Verify that 'Register' link's property 'InnerText' equals 'Register'
            Assert.AreEqual(this.LoginAssertExpectedValues.UIRegisterHyperlinkInnerText, uIRegisterHyperlink.InnerText);

            // Verify that 'Log in' link's property 'InnerText' equals 'Log in'
            Assert.AreEqual(this.LoginAssertExpectedValues.UILoginHyperlinkInnerText, uILoginHyperlink.InnerText);

            // Verify that 'Unknown Name' custom control's property 'TagName' equals 'SECTION'
            Assert.AreEqual(this.LoginAssertExpectedValues.UIItemCustomTagName, uIItemCustom.TagName);
        }
        
        /// <summary>
        /// LoginTest - Use 'LoginTestParams' to pass parameters into this method.
        /// </summary>
        public void LoginTest()
        {
            #region Variable Declarations
            HtmlHyperlink uILoginHyperlink = this.UIInternetExplorercannWindow.UIOneRewardsOneRewardsDocument.UILoginHyperlink;
            HtmlEdit uIUsernameEdit = this.UIInternetExplorercannWindow.UILoginOneRewardsDocument.UIUsernameEdit;
            HtmlEdit uIPasswordEdit = this.UIInternetExplorercannWindow.UILoginOneRewardsDocument.UIPasswordEdit;
            HtmlInputButton uILoginButton = this.UIInternetExplorercannWindow.UILoginOneRewardsDocument.UIBodyPane.UILoginButton;
            WinButton uICloseButton = this.UIInternetExplorercannWindow.UINotificationbarToolBar.UICloseButton;
            #endregion

            // Click 'Log in' link
            Mouse.Click(uILoginHyperlink, new Point(16, 11));

            // Type 'atbneo' in 'User name' text box
            uIUsernameEdit.Text = this.LoginTestParams.UIUsernameEditText;

            // Type '{RShiftKey}' in 'User name' text box
            Keyboard.SendKeys(uIUsernameEdit, this.LoginTestParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LoginTestParams.UIPasswordEditPassword;

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(49, 15));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(9, 12));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;
        }
        
        /// <summary>
        /// LoginAssert2 - Use 'LoginAssert2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void LoginAssert2()
        {
            #region Variable Declarations
            HtmlHyperlink uIRewardAccountHyperlink = this.UIInternetExplorercannWindow.UIOneRewardsOneRewardsDocument.UIMenuCustom.UIRewardAccountHyperlink;
            HtmlHyperlink uICompanyHyperlink = this.UIInternetExplorercannWindow.UIOneRewardsOneRewardsDocument.UIMenuCustom.UICompanyHyperlink;
            HtmlHyperlink uIManageUserHyperlink = this.UIInternetExplorercannWindow.UIOneRewardsOneRewardsDocument.UIMenuCustom.UIManageUserHyperlink;
            #endregion

            // Verify that 'RewardAccount' link's property 'InnerText' equals 'RewardAccount'
            Assert.AreEqual(this.LoginAssert2ExpectedValues.UIRewardAccountHyperlinkInnerText, uIRewardAccountHyperlink.InnerText);

            // Verify that 'Company' link's property 'InnerText' equals 'Company'
            Assert.AreEqual(this.LoginAssert2ExpectedValues.UICompanyHyperlinkInnerText, uICompanyHyperlink.InnerText);

            // Verify that 'ManageUser' link's property 'InnerText' equals 'ManageUser'
            Assert.AreEqual(this.LoginAssert2ExpectedValues.UIManageUserHyperlinkInnerText, uIManageUserHyperlink.InnerText);
        }
        
        /// <summary>
        /// PointCollected - Use 'PointCollectedParams' to pass parameters into this method.
        /// </summary>
        public void PointCollected()
        {
            #region Variable Declarations
            HtmlHyperlink uIRewardAccountHyperlink = this.UIInternetExplorercannWindow.UIOneRewardsOneRewardsDocument.UIMenuCustom.UIRewardAccountHyperlink;
            HtmlHyperlink uICompanyHyperlink = this.UIInternetExplorercannWindow.UIIndexOneRewardsDocument.UIMenuCustom.UICompanyHyperlink;
            HtmlHyperlink uIManageUserHyperlink = this.UIInternetExplorercannWindow.UICompanyOneRewardsDocument.UIMenuCustom.UIManageUserHyperlink;
            HtmlHyperlink uIRewardAccountHyperlink1 = this.UIInternetExplorercannWindow.UIManageUserOneRewardsDocument.UIMenuCustom.UIRewardAccountHyperlink;
            HtmlHyperlink uICollectPointsHyperlink = this.UIInternetExplorercannWindow.UIIndexOneRewardsDocument.UIBodyPane.UICollectPointsHyperlink;
            HtmlEdit uIReceiptNumEdit = this.UIInternetExplorercannWindow.UIEditOneRewardsDocument.UIReceiptNumEdit;
            HtmlInputButton uICollectPointsButton = this.UIInternetExplorercannWindow.UIEditOneRewardsDocument.UIBodyPane.UICollectPointsButton;
            #endregion

            // Click 'RewardAccount' link
            Mouse.Click(uIRewardAccountHyperlink, new Point(56, 11));

            // Click 'Company' link
            Mouse.Click(uICompanyHyperlink, new Point(48, 9));

            // Click 'ManageUser' link
            Mouse.Click(uIManageUserHyperlink, new Point(43, 10));

            // Click 'RewardAccount' link
            Mouse.Click(uIRewardAccountHyperlink1, new Point(60, 4));

            // Click 'Collect Points' link
            Mouse.Click(uICollectPointsHyperlink, new Point(46, 9));

            // Type '23123' in 'ReceiptNum' text box
            uIReceiptNumEdit.Text = this.PointCollectedParams.UIReceiptNumEditText;

            // Click 'Collect Points' button
            Mouse.Click(uICollectPointsButton, new Point(83, 24));
        }
        
        /// <summary>
        /// UsernameAssert - Use 'UsernameAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void UsernameAssert()
        {
            #region Variable Declarations
            HtmlHyperlink uIAtbneoHyperlink = this.UIInternetExplorercannWindow.UIIndexOneRewardsDocument.UILoginCustom.UIAtbneoHyperlink;
            #endregion

            // Verify that 'atbneo' link's property 'InnerText' equals 'atbneo'
            Assert.AreEqual(this.UsernameAssertExpectedValues.UIAtbneoHyperlinkInnerText, uIAtbneoHyperlink.InnerText);
        }
        
        /// <summary>
        /// LogOffTest
        /// </summary>
        public void LogOffTest()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoffHyperlink = this.UIInternetExplorercannWindow.UIIndexOneRewardsDocument.UILoginCustom.UILogoffHyperlink;
            #endregion

            // Click 'Log off' link
            Mouse.Click(uILogoffHyperlink, new Point(24, 9));
        }
        
        #region Properties
        public virtual HomepageParams HomepageParams
        {
            get
            {
                if ((this.mHomepageParams == null))
                {
                    this.mHomepageParams = new HomepageParams();
                }
                return this.mHomepageParams;
            }
        }
        
        public virtual LoginAssertExpectedValues LoginAssertExpectedValues
        {
            get
            {
                if ((this.mLoginAssertExpectedValues == null))
                {
                    this.mLoginAssertExpectedValues = new LoginAssertExpectedValues();
                }
                return this.mLoginAssertExpectedValues;
            }
        }
        
        public virtual LoginTestParams LoginTestParams
        {
            get
            {
                if ((this.mLoginTestParams == null))
                {
                    this.mLoginTestParams = new LoginTestParams();
                }
                return this.mLoginTestParams;
            }
        }
        
        public virtual LoginAssert2ExpectedValues LoginAssert2ExpectedValues
        {
            get
            {
                if ((this.mLoginAssert2ExpectedValues == null))
                {
                    this.mLoginAssert2ExpectedValues = new LoginAssert2ExpectedValues();
                }
                return this.mLoginAssert2ExpectedValues;
            }
        }
        
        public virtual PointCollectedParams PointCollectedParams
        {
            get
            {
                if ((this.mPointCollectedParams == null))
                {
                    this.mPointCollectedParams = new PointCollectedParams();
                }
                return this.mPointCollectedParams;
            }
        }
        
        public virtual UsernameAssertExpectedValues UsernameAssertExpectedValues
        {
            get
            {
                if ((this.mUsernameAssertExpectedValues == null))
                {
                    this.mUsernameAssertExpectedValues = new UsernameAssertExpectedValues();
                }
                return this.mUsernameAssertExpectedValues;
            }
        }
        
        public UIInternetExplorercannWindow UIInternetExplorercannWindow
        {
            get
            {
                if ((this.mUIInternetExplorercannWindow == null))
                {
                    this.mUIInternetExplorercannWindow = new UIInternetExplorercannWindow();
                }
                return this.mUIInternetExplorercannWindow;
            }
        }
        #endregion
        
        #region Fields
        private HomepageParams mHomepageParams;
        
        private LoginAssertExpectedValues mLoginAssertExpectedValues;
        
        private LoginTestParams mLoginTestParams;
        
        private LoginAssert2ExpectedValues mLoginAssert2ExpectedValues;
        
        private PointCollectedParams mPointCollectedParams;
        
        private UsernameAssertExpectedValues mUsernameAssertExpectedValues;
        
        private UIInternetExplorercannWindow mUIInternetExplorercannWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Homepage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class HomepageParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://skyhub/site/' using new browser instance
        /// </summary>
        public string UIInternetExplorercannWindowUrl = "http://skyhub/site/";
        
        /// <summary>
        /// Type 'h' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditText = "h";
        
        /// <summary>
        /// Type 'ttp://onerewards.' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditSendKeys = "ttp://onerewards.";
        
        /// <summary>
        /// Type 'azurewebsites.net{Enter}' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditSendKeys1 = "azurewebsites.net{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class LoginAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Register' link's property 'InnerText' equals 'Register'
        /// </summary>
        public string UIRegisterHyperlinkInnerText = "Register";
        
        /// <summary>
        /// Verify that 'Log in' link's property 'InnerText' equals 'Log in'
        /// </summary>
        public string UILoginHyperlinkInnerText = "Log in";
        
        /// <summary>
        /// Verify that 'Unknown Name' custom control's property 'TagName' equals 'SECTION'
        /// </summary>
        public string UIItemCustomTagName = "SECTION";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class LoginTestParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'atbneo' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "atbneo";
        
        /// <summary>
        /// Type '{RShiftKey}' in 'User name' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "{RShiftKey}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "DC8GHIt6M3zzWqn+ylRT8SC5hiEeYNqC";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginAssert2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class LoginAssert2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'RewardAccount' link's property 'InnerText' equals 'RewardAccount'
        /// </summary>
        public string UIRewardAccountHyperlinkInnerText = "RewardAccount";
        
        /// <summary>
        /// Verify that 'Company' link's property 'InnerText' equals 'Company'
        /// </summary>
        public string UICompanyHyperlinkInnerText = "Company";
        
        /// <summary>
        /// Verify that 'ManageUser' link's property 'InnerText' equals 'ManageUser'
        /// </summary>
        public string UIManageUserHyperlinkInnerText = "ManageUser";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PointCollected'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class PointCollectedParams
    {
        
        #region Fields
        /// <summary>
        /// Type '23123' in 'ReceiptNum' text box
        /// </summary>
        public string UIReceiptNumEditText = "23123";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UsernameAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UsernameAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'atbneo' link's property 'InnerText' equals 'atbneo'
        /// </summary>
        public string UIAtbneoHyperlinkInnerText = "atbneo";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIInternetExplorercannWindow : BrowserWindow
    {
        
        public UIInternetExplorercannWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Internet Explorer cannot display the webpage";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Internet Explorer cannot display the webpage");
            this.WindowTitles.Add("OneRewards - OneRewards");
            this.WindowTitles.Add("Log in - OneRewards");
            this.WindowTitles.Add("Index - OneRewards");
            this.WindowTitles.Add("Company - OneRewards");
            this.WindowTitles.Add("ManageUser - OneRewards");
            this.WindowTitles.Add("Edit - OneRewards");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressComboControlToolBar UIAddressComboControlToolBar
        {
            get
            {
                if ((this.mUIAddressComboControlToolBar == null))
                {
                    this.mUIAddressComboControlToolBar = new UIAddressComboControlToolBar(this);
                }
                return this.mUIAddressComboControlToolBar;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOneRewardsOneRewardsDocument UIOneRewardsOneRewardsDocument
        {
            get
            {
                if ((this.mUIOneRewardsOneRewardsDocument == null))
                {
                    this.mUIOneRewardsOneRewardsDocument = new UIOneRewardsOneRewardsDocument(this);
                }
                return this.mUIOneRewardsOneRewardsDocument;
            }
        }
        
        public UILoginOneRewardsDocument UILoginOneRewardsDocument
        {
            get
            {
                if ((this.mUILoginOneRewardsDocument == null))
                {
                    this.mUILoginOneRewardsDocument = new UILoginOneRewardsDocument(this);
                }
                return this.mUILoginOneRewardsDocument;
            }
        }
        
        public UINotificationbarToolBar UINotificationbarToolBar
        {
            get
            {
                if ((this.mUINotificationbarToolBar == null))
                {
                    this.mUINotificationbarToolBar = new UINotificationbarToolBar(this);
                }
                return this.mUINotificationbarToolBar;
            }
        }
        
        public UIIndexOneRewardsDocument UIIndexOneRewardsDocument
        {
            get
            {
                if ((this.mUIIndexOneRewardsDocument == null))
                {
                    this.mUIIndexOneRewardsDocument = new UIIndexOneRewardsDocument(this);
                }
                return this.mUIIndexOneRewardsDocument;
            }
        }
        
        public UICompanyOneRewardsDocument UICompanyOneRewardsDocument
        {
            get
            {
                if ((this.mUICompanyOneRewardsDocument == null))
                {
                    this.mUICompanyOneRewardsDocument = new UICompanyOneRewardsDocument(this);
                }
                return this.mUICompanyOneRewardsDocument;
            }
        }
        
        public UIManageUserOneRewardsDocument UIManageUserOneRewardsDocument
        {
            get
            {
                if ((this.mUIManageUserOneRewardsDocument == null))
                {
                    this.mUIManageUserOneRewardsDocument = new UIManageUserOneRewardsDocument(this);
                }
                return this.mUIManageUserOneRewardsDocument;
            }
        }
        
        public UIEditOneRewardsDocument UIEditOneRewardsDocument
        {
            get
            {
                if ((this.mUIEditOneRewardsDocument == null))
                {
                    this.mUIEditOneRewardsDocument = new UIEditOneRewardsDocument(this);
                }
                return this.mUIEditOneRewardsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressComboControlToolBar mUIAddressComboControlToolBar;
        
        private UIItemWindow mUIItemWindow;
        
        private UIOneRewardsOneRewardsDocument mUIOneRewardsOneRewardsDocument;
        
        private UILoginOneRewardsDocument mUILoginOneRewardsDocument;
        
        private UINotificationbarToolBar mUINotificationbarToolBar;
        
        private UIIndexOneRewardsDocument mUIIndexOneRewardsDocument;
        
        private UICompanyOneRewardsDocument mUICompanyOneRewardsDocument;
        
        private UIManageUserOneRewardsDocument mUIManageUserOneRewardsDocument;
        
        private UIEditOneRewardsDocument mUIEditOneRewardsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIAddressComboControlToolBar : WinToolBar
    {
        
        public UIAddressComboControlToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Address Combo Control";
            this.WindowTitles.Add("Internet Explorer cannot display the webpage");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIItemMenuItem
        {
            get
            {
                if ((this.mUIItemMenuItem == null))
                {
                    this.mUIItemMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIItemMenuItem.SearchProperties[WinMenuItem.PropertyNames.Instance] = "2";
                    this.mUIItemMenuItem.WindowTitles.Add("Internet Explorer cannot display the webpage");
                    #endregion
                }
                return this.mUIItemMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIItemMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "41477";
            this.WindowTitles.Add("Internet Explorer cannot display the webpage");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Bing";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("Internet Explorer cannot display the webpage");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIOneRewardsOneRewardsDocument : HtmlDocument
    {
        
        public UIOneRewardsOneRewardsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "OneRewards - OneRewards";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://onerewards.azurewebsites.net/";
            this.WindowTitles.Add("OneRewards - OneRewards");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIRegisterHyperlink
        {
            get
            {
                if ((this.mUIRegisterHyperlink == null))
                {
                    this.mUIRegisterHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIRegisterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "registerLink";
                    this.mUIRegisterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIRegisterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIRegisterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Register";
                    this.mUIRegisterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Register";
                    this.mUIRegisterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIRegisterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/Account/Register";
                    this.mUIRegisterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIRegisterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"registerLink\" href=\"/Account/Registe";
                    this.mUIRegisterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIRegisterHyperlink.WindowTitles.Add("OneRewards - OneRewards");
                    #endregion
                }
                return this.mUIRegisterHyperlink;
            }
        }
        
        public HtmlHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "loginLink";
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log in";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"loginLink\" href=\"/Account/Login\"";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUILoginHyperlink.WindowTitles.Add("OneRewards - OneRewards");
                    #endregion
                }
                return this.mUILoginHyperlink;
            }
        }
        
        public UIMenuCustom UIMenuCustom
        {
            get
            {
                if ((this.mUIMenuCustom == null))
                {
                    this.mUIMenuCustom = new UIMenuCustom(this);
                }
                return this.mUIMenuCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIRegisterHyperlink;
        
        private HtmlHyperlink mUILoginHyperlink;
        
        private UIMenuCustom mUIMenuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIMenuCustom : HtmlCustom
    {
        
        public UIMenuCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "menu";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "UL";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"menu\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("OneRewards - OneRewards");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIRewardAccountHyperlink
        {
            get
            {
                if ((this.mUIRewardAccountHyperlink == null))
                {
                    this.mUIRewardAccountHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIRewardAccountHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIRewardAccountHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIRewardAccountHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIRewardAccountHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "RewardAccount";
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/RewardAccount";
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/RewardAccount";
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/RewardAccount\"";
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIRewardAccountHyperlink.WindowTitles.Add("OneRewards - OneRewards");
                    #endregion
                }
                return this.mUIRewardAccountHyperlink;
            }
        }
        
        public HtmlHyperlink UICompanyHyperlink
        {
            get
            {
                if ((this.mUICompanyHyperlink == null))
                {
                    this.mUICompanyHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICompanyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICompanyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICompanyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICompanyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Company";
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Company";
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/Company";
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Company\"";
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUICompanyHyperlink.WindowTitles.Add("OneRewards - OneRewards");
                    #endregion
                }
                return this.mUICompanyHyperlink;
            }
        }
        
        public HtmlHyperlink UIManageUserHyperlink
        {
            get
            {
                if ((this.mUIManageUserHyperlink == null))
                {
                    this.mUIManageUserHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIManageUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIManageUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIManageUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIManageUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ManageUser";
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/ManageUser";
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/ManageUser";
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/ManageUser\"";
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIManageUserHyperlink.WindowTitles.Add("OneRewards - OneRewards");
                    #endregion
                }
                return this.mUIManageUserHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIRewardAccountHyperlink;
        
        private HtmlHyperlink mUICompanyHyperlink;
        
        private HtmlHyperlink mUIManageUserHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UILoginOneRewardsDocument : HtmlDocument
    {
        
        public UILoginOneRewardsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - OneRewards";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://onerewards.azurewebsites.net/Account/Login";
            this.WindowTitles.Add("Log in - OneRewards");
            #endregion
        }
        
        #region Properties
        public UIBodyPane UIBodyPane
        {
            get
            {
                if ((this.mUIBodyPane == null))
                {
                    this.mUIBodyPane = new UIBodyPane(this);
                }
                return this.mUIBodyPane;
            }
        }
        
        public HtmlEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "UserName";
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "UserName";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User name";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=\"UserName\" name=\"UserName\" value=\"\" t";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIUsernameEdit.WindowTitles.Add("Log in - OneRewards");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=\"Password\" name=\"Password\" type=\"pass";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Log in - OneRewards");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIBodyPane mUIBodyPane;
        
        private HtmlEdit mUIUsernameEdit;
        
        private HtmlEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIBodyPane : HtmlDiv
    {
        
        public UIBodyPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "body";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\nLog in.\r\n\r\nUse this form to enter your";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"body\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Log in - OneRewards");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.SearchProperties["TagName"] = "SECTION";
                    this.mUIItemCustom.FilterProperties["Class"] = "content-wrapper main-content clear-fix";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"content-wrapper main-content clea";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("Log in - OneRewards");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public HtmlInputButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "value=\"Log in\" type=\"submit\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    this.mUILoginButton.WindowTitles.Add("Log in - OneRewards");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        
        private HtmlInputButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UINotificationbarToolBar : WinToolBar
    {
        
        public UINotificationbarToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Notification bar";
            this.WindowTitles.Add("OneRewards - OneRewards");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("OneRewards - OneRewards");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIIndexOneRewardsDocument : HtmlDocument
    {
        
        public UIIndexOneRewardsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - OneRewards";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/RewardAccount";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://onerewards.azurewebsites.net/RewardAccount";
            this.WindowTitles.Add("Index - OneRewards");
            #endregion
        }
        
        #region Properties
        public UIMenuCustom1 UIMenuCustom
        {
            get
            {
                if ((this.mUIMenuCustom == null))
                {
                    this.mUIMenuCustom = new UIMenuCustom1(this);
                }
                return this.mUIMenuCustom;
            }
        }
        
        public UIBodyPane1 UIBodyPane
        {
            get
            {
                if ((this.mUIBodyPane == null))
                {
                    this.mUIBodyPane = new UIBodyPane1(this);
                }
                return this.mUIBodyPane;
            }
        }
        
        public UILoginCustom UILoginCustom
        {
            get
            {
                if ((this.mUILoginCustom == null))
                {
                    this.mUILoginCustom = new UILoginCustom(this);
                }
                return this.mUILoginCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIMenuCustom1 mUIMenuCustom;
        
        private UIBodyPane1 mUIBodyPane;
        
        private UILoginCustom mUILoginCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIMenuCustom1 : HtmlCustom
    {
        
        public UIMenuCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "menu";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "UL";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"menu\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Index - OneRewards");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICompanyHyperlink
        {
            get
            {
                if ((this.mUICompanyHyperlink == null))
                {
                    this.mUICompanyHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICompanyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICompanyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICompanyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICompanyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Company";
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Company";
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/Company";
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Company\"";
                    this.mUICompanyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUICompanyHyperlink.WindowTitles.Add("Index - OneRewards");
                    #endregion
                }
                return this.mUICompanyHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICompanyHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIBodyPane1 : HtmlDiv
    {
        
        public UIBodyPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "body";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\nRewardAccounts\r\n\r\nCreate New \r\n\r\n\r\n\r\nR";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"body\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Index - OneRewards");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICollectPointsHyperlink
        {
            get
            {
                if ((this.mUICollectPointsHyperlink == null))
                {
                    this.mUICollectPointsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICollectPointsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICollectPointsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICollectPointsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICollectPointsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Collect Points";
                    this.mUICollectPointsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/RewardAccount/Edit/1000";
                    this.mUICollectPointsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICollectPointsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/RewardAccount/Edit/1000";
                    this.mUICollectPointsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICollectPointsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/RewardAccount/Edit/1000\"";
                    this.mUICollectPointsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUICollectPointsHyperlink.WindowTitles.Add("Index - OneRewards");
                    #endregion
                }
                return this.mUICollectPointsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICollectPointsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UILoginCustom : HtmlCustom
    {
        
        public UILoginCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "login";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "SECTION";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"login\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Index - OneRewards");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAtbneoHyperlink
        {
            get
            {
                if ((this.mUIAtbneoHyperlink == null))
                {
                    this.mUIAtbneoHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAtbneoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAtbneoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAtbneoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAtbneoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "atbneo";
                    this.mUIAtbneoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/ChangePassword";
                    this.mUIAtbneoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Change password";
                    this.mUIAtbneoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/Account/ChangePassword";
                    this.mUIAtbneoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "username";
                    this.mUIAtbneoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"username\" title=\"Change password\"";
                    this.mUIAtbneoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAtbneoHyperlink.WindowTitles.Add("Index - OneRewards");
                    #endregion
                }
                return this.mUIAtbneoHyperlink;
            }
        }
        
        public HtmlHyperlink UILogoffHyperlink
        {
            get
            {
                if ((this.mUILogoffHyperlink == null))
                {
                    this.mUILogoffHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log off";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/LogOff";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/Account/LogOff";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Account/LogOff\"";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUILogoffHyperlink.WindowTitles.Add("Index - OneRewards");
                    #endregion
                }
                return this.mUILogoffHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAtbneoHyperlink;
        
        private HtmlHyperlink mUILogoffHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UICompanyOneRewardsDocument : HtmlDocument
    {
        
        public UICompanyOneRewardsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Company - OneRewards";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Company";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://onerewards.azurewebsites.net/Company";
            this.WindowTitles.Add("Company - OneRewards");
            #endregion
        }
        
        #region Properties
        public UIMenuCustom2 UIMenuCustom
        {
            get
            {
                if ((this.mUIMenuCustom == null))
                {
                    this.mUIMenuCustom = new UIMenuCustom2(this);
                }
                return this.mUIMenuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIMenuCustom2 mUIMenuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIMenuCustom2 : HtmlCustom
    {
        
        public UIMenuCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "menu";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "UL";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"menu\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Company - OneRewards");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIManageUserHyperlink
        {
            get
            {
                if ((this.mUIManageUserHyperlink == null))
                {
                    this.mUIManageUserHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIManageUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIManageUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIManageUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIManageUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ManageUser";
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/ManageUser";
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/ManageUser";
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/ManageUser\"";
                    this.mUIManageUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIManageUserHyperlink.WindowTitles.Add("Company - OneRewards");
                    #endregion
                }
                return this.mUIManageUserHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIManageUserHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIManageUserOneRewardsDocument : HtmlDocument
    {
        
        public UIManageUserOneRewardsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ManageUser - OneRewards";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ManageUser";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://onerewards.azurewebsites.net/ManageUser";
            this.WindowTitles.Add("ManageUser - OneRewards");
            #endregion
        }
        
        #region Properties
        public UIMenuCustom3 UIMenuCustom
        {
            get
            {
                if ((this.mUIMenuCustom == null))
                {
                    this.mUIMenuCustom = new UIMenuCustom3(this);
                }
                return this.mUIMenuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIMenuCustom3 mUIMenuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIMenuCustom3 : HtmlCustom
    {
        
        public UIMenuCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "menu";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "UL";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"menu\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("ManageUser - OneRewards");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIRewardAccountHyperlink
        {
            get
            {
                if ((this.mUIRewardAccountHyperlink == null))
                {
                    this.mUIRewardAccountHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIRewardAccountHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIRewardAccountHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIRewardAccountHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIRewardAccountHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "RewardAccount";
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/RewardAccount";
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://onerewards.azurewebsites.net/RewardAccount";
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/RewardAccount\"";
                    this.mUIRewardAccountHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIRewardAccountHyperlink.WindowTitles.Add("ManageUser - OneRewards");
                    #endregion
                }
                return this.mUIRewardAccountHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIRewardAccountHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIEditOneRewardsDocument : HtmlDocument
    {
        
        public UIEditOneRewardsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Edit - OneRewards";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/RewardAccount/Edit/1000";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://onerewards.azurewebsites.net/RewardAccount/Edit/1000";
            this.WindowTitles.Add("Edit - OneRewards");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIReceiptNumEdit
        {
            get
            {
                if ((this.mUIReceiptNumEdit == null))
                {
                    this.mUIReceiptNumEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIReceiptNumEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ReceiptNum";
                    this.mUIReceiptNumEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ReceiptNum";
                    this.mUIReceiptNumEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIReceiptNumEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIReceiptNumEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIReceiptNumEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIReceiptNumEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=\"ReceiptNum\" name=\"ReceiptNum\" value=";
                    this.mUIReceiptNumEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIReceiptNumEdit.WindowTitles.Add("Edit - OneRewards");
                    #endregion
                }
                return this.mUIReceiptNumEdit;
            }
        }
        
        public UIBodyPane2 UIBodyPane
        {
            get
            {
                if ((this.mUIBodyPane == null))
                {
                    this.mUIBodyPane = new UIBodyPane2(this);
                }
                return this.mUIBodyPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIReceiptNumEdit;
        
        private UIBodyPane2 mUIBodyPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIBodyPane2 : HtmlDiv
    {
        
        public UIBodyPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "body";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\nCollect Points\r\n\r\n\r\nRewardAccount\r\nRew";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"body\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Edit - OneRewards");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UICollectPointsButton
        {
            get
            {
                if ((this.mUICollectPointsButton == null))
                {
                    this.mUICollectPointsButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICollectPointsButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICollectPointsButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICollectPointsButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Collect Points";
                    this.mUICollectPointsButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICollectPointsButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICollectPointsButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICollectPointsButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "value=\"Collect Points\" type=\"submit\"";
                    this.mUICollectPointsButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUICollectPointsButton.WindowTitles.Add("Edit - OneRewards");
                    #endregion
                }
                return this.mUICollectPointsButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUICollectPointsButton;
        #endregion
    }
}
